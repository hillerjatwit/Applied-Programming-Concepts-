
Incremental Development
1st version - The base user class will be created. All users will have a first name, last name, ID, and email. (attributes). 
All users can edit their attributes (individual functions for each attribute) and print all their attributes. 
With the User class coded, the Student class will inherit it and its table in the database will be created. 
Along with the base attributes from the User class, Students will also have an expected graduation year and major. 
Students will be able to search for courses and be shown their availability. They can also add/drop courses from their 
schedule and be notified of any time conflicts that may result from adding a course to their schedule. 
Once they have a schedule, they will be able to print it.

2nd version - Once the first version is designed, tested, and verified, the Instructor table and class will be added to the system. 
Instructors, like students, are inherited from the User class. Instructors have a title, year of hire, and department as additional 
attributes and will be able  to print their schedule, print their class list, and search courses. Once this second version is 
created, it will be tested and verified before moving onto the final version.

Final version - The final version will add the Admin class and Admin table. Admins will have first name, last name, ID, email, 
title, and office as attributes. They can add courses to the system, temove courses from the system, add/remove users, 
add/remove students from a course, and search and print rosters and courses. With all the classes and tables coded, the 
text based user interface can be finalized and tested. 

The benefit of this model is that it allows for the creation of a simple initial version and new versions that add more complexity.


Micah Rieley Notes:
Incremental Development 

I like how you added each section of the user as different versions, the only thing I would say is that it may complicate things by having a fully flushed out version of the student created and then create a full version of the professor and then the admin. It could complicate things as for some interactions, instead of creating simple interactions first and then making them more advanced, youâ€™d just start by creating an advanced version which may make things a bit more difficult  
